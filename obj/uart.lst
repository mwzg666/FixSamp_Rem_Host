C251 COMPILER V5.60.0,  uart                                                               22/03/24  16:37:31  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE uart
OBJECT MODULE PLACED IN .\obj\uart.obj
COMPILER INVOKED BY: D:\KeilMDK\C251\BIN\C251.EXE Uart\uart.c XSMALL OPTIMIZE(0,SPEED) BROWSE INCDIR(.\Flash;.\Uart;.\Mo
                    -dBus;..\FixSamp8_Conbinet) PRINT(.\obj\uart.lst) OBJECT(.\obj\uart.obj) 

stmt  level    source

    1          #include "main.h"
    2          #include "ModBusDev.h"
    3          
    4          u16 Rx1_Timer  = 0;
    5          u16 Rx2_Timer  = 0;
    6          
    7          u8  TX1_Cnt;    //发送计数
    8          u8  RX1_Cnt;    //接收计数
    9          bit B_TX1_Busy; //发送忙标志
   10          
   11          u8  TX2_Cnt;    //发送计数
   12          u8  RX2_Cnt;    //接收计数
   13          bit B_TX2_Busy; //发送忙标志
   14          
   15          u8  RX1_Buffer[MAX_LENGTH]; //接收缓冲
   16          u8  RX2_Buffer[MAX_LENGTH]; //接收缓冲
   17          
   18          void UART1_config()
   19          {
   20   1          /*********** 波特率使用定时器1 *****************/
   21   1          {
   22   2              TR1 = 0;
   23   2              AUXR &= ~0x01;      //S1 BRT Use Timer1;
   24   2              AUXR |=  (1<<6);    //Timer1 set as 1T mode
   25   2              TMOD &= ~(1<<6);    //Timer1 set As Timer
   26   2              TMOD &= ~0x30;      //Timer1_16bitAutoReload;
   27   2              TH1 = (u8)((65536UL - (MAIN_Fosc / 4) / Baudrate3) / 256);
   28   2              TL1 = (u8)((65536UL - (MAIN_Fosc / 4) / Baudrate3) % 256);
   29   2              ET1 = 0;    //禁止中断
   30   2              INTCLKO &= ~0x02;  //不输出时钟
   31   2              TR1  = 1;
   32   2          }
   33   1        
   34   1          /*************************************************/
   35   1          //UART1模式, 0x00: 同步移位输出, 0x40: 8位数据,可变波特率, 
   36   1          //           0x80: 9位数据,固定波特率, 0xc0: 9位数据,可变波特率 
   37   1      
   38   1          SCON = (SCON & 0x3f) | 0x40; 
   39   1      
   40   1          PS  = 1;    //中断高优先级
   41   1          PSH = 0;
   42   1          //PS  = 1;    //高优先级中断
   43   1          ES  = 1;    //允许中断
   44   1          REN = 1;    //允许接收
   45   1          
   46   1          //UART1 switch to, 0x00: P3.0 P3.1, 0x40: P3.6 P3.7, 
   47   1          //                 0x80: P1.6 P1.7, 0xC0: P4.3 P4.4
   48   1          P_SW1 &= 0x3f;
   49   1          P_SW1 |= 0x40;  
   50   1          
   51   1          B_TX1_Busy = 0;
   52   1          TX1_Cnt = 0;
   53   1          RX1_Cnt = 0;
   54   1      }
   55          
   56          void UART1_int (void) interrupt 4
   57          {
   58   1          if(RI)
C251 COMPILER V5.60.0,  uart                                                               22/03/24  16:37:31  PAGE 2   

   59   1          {
   60   2              RI = 0;
   61   2              Rx1_Timer = 0;
   62   2              RX1_Buffer[RX1_Cnt] = SBUF;
   63   2              
   64   2              if(++RX1_Cnt >= MAX_LENGTH)   
   65   2              {
   66   3                  RX1_Cnt = 0;
   67   3              }
   68   2          }
   69   1      
   70   1          if(TI)
   71   1          {
   72   2              TI = 0;
   73   2              B_TX1_Busy = 0;
   74   2          }
   75   1      }
   76          
   77          void Uart1Send(u8 *buf, u8 len)
   78          {
   79   1          u8 i;
   80   1          RS485_EN(0);
   81   1          for (i=0;i<len;i++)     
   82   1          {
   83   2              SBUF = buf[i];
   84   2              B_TX1_Busy = 1;
   85   2              while(B_TX1_Busy);
   86   2          }
   87   1          RS485_EN(1);
   88   1      }
   89          
   90          //重定向Printf
   91          char putchar(char c )
   92          {
   93   1          RS485_EN(0);
   94   1          SBUF = c;
   95   1          while(!TI);
   96   1          TI = 0;
   97   1          RS485_EN(1);
   98   1          return c;
   99   1      }
  100          
  101          
  102          void Uart1Hnd()
  103          {
  104   1          BYTE i = 0;
  105   1          if (Rx1_Timer > 20)
  106   1          {
  107   2              Rx1_Timer = 0;
  108   2              //printf("ok\r\n");
  109   2              //Error();
  110   2              Remflag = false;
  111   2              RemOut = false;
  112   2              RemOutTime = 0;
  113   2              HndModBusRecv(RX1_Buffer,RX1_Cnt);
  114   2              ClearUart1Buf();
  115   2          }
  116   1          else
  117   1          {
  118   2              Remflag = true;
  119   2          }
  120   1      
  121   1      }
  122          
  123          void ClearUart1Buf()
  124          {
C251 COMPILER V5.60.0,  uart                                                               22/03/24  16:37:31  PAGE 3   

  125   1          memset(RX1_Buffer,0,MAX_LENGTH);
  126   1          RX1_Cnt = 0;
  127   1      }
  128          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       329     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =       416     ------
  bit size             =         2     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        12     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
