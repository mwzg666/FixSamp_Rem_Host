C251 COMPILER V5.60.0,  ModBusHost                                                         26/10/23  19:21:45  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE ModBusHost
OBJECT MODULE PLACED IN .\obj\ModBusHost.obj
COMPILER INVOKED BY: D:\KeilMDK\C251\BIN\C251.EXE ModBus\ModBusHost.c XSMALL OPTIMIZE(0,SPEED) BROWSE INCDIR(.\Flash;.\U
                    -art;.\ModBus;..\FixSamp8_Conbinet) PRINT(.\obj\ModBusHost.lst) OBJECT(.\obj\ModBusHost.obj) 

stmt  level    source

    1          #include <stdio.h>
    2          #include <stdlib.h>
    3          #include <string.h>
    4          
    5          
    6          #include "main.h"
    7          #include "ModBus.h"
    8          #include "ModBusHost.h"
    9          #include "uart.h"
   10          
   11          
   12          /*
   13          ModBus 帧格式
   14          1. 发送帧
   15          地址           命令     寄存器    寄存器数量    数据                                             CRC   
   16          0A(固定值)     Cmd(1)   RX(2)     n(2)          无数据表示读取、有数据表示写对应的寄存器 
   17          
   18          数据定义:  长度 + 数据
   19                     n*2    dat(n*2)
   20          
   21          2. 应答帧 -- 返回数据
   22          地址           命令   数据长度    数据      CRC   
   23          0A(固定值)     Cmd    n(1)        dat(n)
   24          
   25          3. 应答帧 -- 返回状态
   26          地址           命令   寄存器   寄存器数量     CRC   
   27          0A(固定值)     Cmd    Rx(2)    n(2)                       
   28          */
   29          
   30          HOST_SEND_FRAME xdata  HostSendFrame;   // 发送帧
   31          DEVICE_READ_ACK xdata  ReadAckFrame;    // 读接收帧
   32          DEVICE_WRITE_ACK xdata WriteAckFrame;  // 写接收帧
   33          
   34          
   35          BYTE MbId[2] = {0};
   36          
   37          
   38          WORD HostBufIndex = 0;
   39          
   40          
   41          WORD PopReg()
   42          {
   43   1          WORD reg = 0;
   44   1          memcpy(&reg, &ReadAckFrame.Data[HostBufIndex], 2);
   45   1          HostBufIndex +=2;
   46   1          reg =  RegSw(reg);
   47   1          return reg;
   48   1      }
   49          
   50          
   51          BYTE HostSendCmd(BYTE Mode, BYTE Addr, BYTE Cmd, WORD Reg, WORD Count, BYTE * Data)
   52          {
   53   1          WORD i = 0;
   54   1          WORD crc, SendLen;
   55   1          //Error();
   56   1          memset(&HostSendFrame, 0, sizeof(HOST_SEND_FRAME));
   57   1          
   58   1          HostSendFrame.Address = Addr; //Param.DevAddr;
C251 COMPILER V5.60.0,  ModBusHost                                                         26/10/23  19:21:45  PAGE 2   

   59   1          HostSendFrame.FunctionCode = Cmd;
   60   1          HostSendFrame.RegAddr = RegSw(Reg);
   61   1          HostSendFrame.RegCount =  RegSw(Count);
   62   1      
   63   1          SendLen = 6;
   64   1      
   65   1          if (((Count*2) > 0) && (Data != NULL))
   66   1          {
   67   2              HostSendFrame.Data[0] = Count*2;  // 数据长度
   68   2              SendLen ++;
   69   2              i++;
   70   2              memcpy(&HostSendFrame.Data[1], Data, Count*2);
   71   2              SendLen += Count*2;
   72   2              i+=2;
   73   2          }
   74   1          
   75   1          // 计算CRC , 并添加到数据后面
   76   1          crc = CRC16Calc((BYTE *)&HostSendFrame, SendLen);
   77   1          HostSendFrame.Data[i]  = (BYTE)(crc);
   78   1          HostSendFrame.Data[i+1] = (BYTE)(crc>>8);
   79   1          
   80   1          SendLen += 2; 
   81   1          SendBuffer(Mode, (BYTE *)&HostSendFrame, SendLen);
   82   1      
   83   1          return true;
   84   1      }
   85          
   86          
   87          
   88          // 由于原来是安装MODBUS_RTU写的，发送MODBUS_TCP时特殊处理一下
   89          void SendTcpFrame(BYTE *Data, WORD Length)
   90          {
   91   1          BYTE Head[6] = {0};
   92   1          WORD sLen = Length - 2;  // MODBUS_TCP 没有CRC
   93   1          memcpy(Head,MbId, 2);
   94   1          Head[5] = (BYTE)sLen;
   95   1          
   96   1          //UnusedVar(Data);
   97   1          //Uart3Send(Head,6);
   98   1          //Uart3Send(Data, (BYTE)sLen);
   99   1      }
*** WARNING C47 IN LINE 89 OF ModBus\ModBusHost.c: 'Data': unreferenced parameter
  100          
  101          void SendBuffer(BYTE Mode, BYTE * Data, WORD Length)
  102          {
  103   1          switch(Mode)
  104   1          {
  105   2              case RJ45  : SendTcpFrame(Data, Length);        break;
  106   2              case RS485 : Uart1Send(Data, (BYTE)Length);     break;
  107   2          }
  108   1      }
  109          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       475     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =       533     ------
  xdata-const size     =    ------     ------
  edata size           =        40     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
C251 COMPILER V5.60.0,  ModBusHost                                                         26/10/23  19:21:45  PAGE 3   

  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        18     ------
End of Module Information.


C251 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
